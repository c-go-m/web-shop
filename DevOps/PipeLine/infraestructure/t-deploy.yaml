parameters:  
  ServiceConnection: default
  ResourceGroupTerraform: default
  StoregeAccountTerraform: default
  TerraformContainer: default
  TerraformFile: default
  FileVar: default

stages:
- stage: Deploy
  jobs:
  - job: 'Deploy_Terraform'
    steps:

    - task: DownloadPipelineArtifact@2
      displayName: 'Get Artifact'
      inputs:
        artifact: drop
        path: $(Build.ArtifactStagingDirectory)       

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: 'Install Terraform latest'

    - script: | 
        cd $(Build.ArtifactStagingDirectory)
        ls        
      displayName: ejemplo
   

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
      displayName: 'Terraform : init'
      inputs:
        command: init
        workingDirectory: '$(Build.ArtifactStagingDirectory)'
        backendServiceArm: $(ServiceConnection)
        backendAzureRmResourceGroupName: $(ResourceGroupTerraform)
        backendAzureRmStorageAccountName: $(StoregeAccountTerraform)
        backendAzureRmContainerName: $(TerraformContainer)
        backendAzureRmKey: $(TerraformFile)    

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
      displayName: 'Terraform : apply'
      inputs:
        command: plan
        commandOptions: '-var-file=$(Build.ArtifactStagingDirectory)/$(FileVar)'
        environmentServiceNameAzureRM: $(ServiceConnection)  
        workingDirectory: '$(Build.ArtifactStagingDirectory)'   

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
      displayName: 'Terraform : apply'
      inputs:
        command: apply
        commandOptions: '-var-file=$(Build.ArtifactStagingDirectory)/$(FileVar)'
        environmentServiceNameAzureRM: $(ServiceConnection)  
        workingDirectory: '$(Build.ArtifactStagingDirectory)'    